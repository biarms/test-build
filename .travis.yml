sudo: required

services:
  - docker

# From https://docs.travis-ci.com/user/customizing-the-build/
# install: true

# 'bash' is not a travis language. See https://docs.travis-ci.com/user/languages/
language: generic

# See also:
# 1. https://github.com/justincormack/cross-docker
# 2. https://docs.docker.com/docker-for-mac/multi-arch/
# 3. https://github.com/docker-library/official-images#architectures-other-than-amd64
# 4. https://github.com/docker-library/official-images/blob/a7ad3081aa5f51584653073424217e461b72670a/bashbrew/go/vendor/src/github.com/docker-library/go-dockerlibrary/architecture/oci-platform.go#L14-L25
#  "amd64":   {OS: "linux", Architecture: "amd64"},
#  "arm32v5": {OS: "linux", Architecture: "arm", Variant: "v5"},
#  "arm32v6": {OS: "linux", Architecture: "arm", Variant: "v6"},
#  "arm32v7": {OS: "linux", Architecture: "arm", Variant: "v7"},
#  "arm64v8": {OS: "linux", Architecture: "arm64", Variant: "v8"},
#  "i386":    {OS: "linux", Architecture: "386"},
#  "ppc64le": {OS: "linux", Architecture: "ppc64le"},
#  "s390x": {OS: "linux", Architecture: "s390x"},
#  "windows-amd64": {OS: "windows", Architecture: "amd64"},


matrix:
    include:
        - os: linux
          env: BUILD_ARCH=arm32v6
          env: QEMU_ARCH=arm
        - os: linux
          env: BUILD_ARCH=arm32v7
          env: QEMU_ARCH=arm
        - os: linux
          env: BUILD_ARCH=arm64v8
          env: QEMU_ARCH=aarch64
#        - os: osx
#          env: BUILD_ARCH=arm64v8
#          env: QEMU_ARCH=aarch64

env:
  global:
    - IMAGE_NAME=biarms/test-build

before_install:
  - VERSION=$(grep "ENV VERSION" Dockerfile | sed 's/.*=//')
  - BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}
  - >
    if [[ "${TRAVIS_BRANCH}" == "master" && "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      echo "We are building the master branch: version is official version."
      IMAGE_VERSION="${VERSION}"
      BETA_MODE="false"
    else
      echo "We are not building the master branch (or we are in a PR mode). Building a beta version then"
      IMAGE_VERSION="${VERSION}-beta-${BUILD_NUMBER}"
      BETA_MODE="true"
    fi
  - echo "BUILD_ARCH=${BUILD_ARCH} - QEMU_ARCH=${QEMU_ARCH} - IMAGE_VERSION=${IMAGE_VERSION} - TRAVIS_BRANCH=${TRAVIS_BRANCH} - DOCKER_USERNAME=${DOCKER_USERNAME}"
  - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
  - docker run --rm --privileged multiarch/qemu-user-static:register --reset
  # When https://github.com/docker/cli/pull/138 merged branch will be part of an official release:
  # docker manifest create biarms/mysql biarms/mysql-arm
  # docker manifest annotate biarms/mysql biarms/mysql-arm --os linux --arch arm
  # docker manifest push new-list-ref-name
  #
  # In the mean time, we use: https://github.com/estesp/manifest-tool
  # https://github.com/estesp/manifest-tool/releases/download/v0.7.0/manifest-tool-linux-arm64 &&
  - curl -L -o manifest-tool https://github.com/estesp/manifest-tool/releases/download/v0.7.0/manifest-tool-linux-386
  - chmod +x manifest-tool
  - ls -l manifest-tool
  - bash -c './manifest-tool --version'
  - >
    echo "image: ${IMAGE_NAME}:${IMAGE_VERSION}" > manifest.yaml
  - >
    echo "manifests:" >> manifest.yaml
  - >
    echo "  - image: ${IMAGE_NAME}:linux-arm-${IMAGE_VERSION} " >> manifest.yaml
  - >
    echo "    platform: " >> manifest.yaml
  - >
    echo "      architecture: arm " >> manifest.yaml
  - >
    echo "      os: linux " >> manifest.yaml
  - >
    echo "   #TODO: armv6l, armv7l, aarch64" >> manifest.yaml
  - cat manifest.yaml

script:
  # build the image
  - BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
  - VCS_REF=$(git rev-parse --short HEAD)
  - QEMU_ARCH=$QEMU_ARCH BUILD_ARCH=$BUILD_ARCH make
  # docker build --build-arg VCS_REF=$VCS_REF
  #               --build-arg BUILD_DATE=${BUILD_DATE}
  #               --build-arg BUILD_ARCH=${BUILD_ARCH}
  #               --build-arg QEMU_ARCH=${QEMU_ARCH}
  #               -t ${IMAGE_NAME}:build .
  # test the image
  - docker run --rm ${IMAGE_NAME}:build

after_success:
  - docker tag ${IMAGE_NAME}:build ${IMAGE_NAME}:linux-arm-${IMAGE_VERSION}
  - docker push ${IMAGE_NAME}:linux-arm-${IMAGE_VERSION}
  - bash -c './manifest-tool push from-spec manifest.yaml'
  - >
    if [[ "${BETA_MODE}" == "false" ]]; then
      echo "Building master branch. Let's also push the 'latest' tag on docker hub"
      docker tag ${IMAGE_NAME}:build ${IMAGE_NAME}:latest
      docker push ${IMAGE_NAME}:latest
    fi
